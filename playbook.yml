# Based on requirements: https://code.visualstudio.com/docs/devcontainers/containers#_installation
# TODO: Add ssh-keygen, howdy, Godot, Krita, OBS
---
- name: Install Software on Linux Mint
  hosts: all
  become: no
  vars:
    arch_mapping:  # Map ansible architecture {{ ansible_architecture }} names to Docker's architecture names
      x86_64: amd64
      aarch64: arm64
    codename_mapping:  # Map Linux Mint code names to Ubuntu code names
      wilma: jammy
  tasks:
    - name: Setting host facts using complex arguments
      set_fact:
        local_user: "{{ ansible_user_id }}"
    - name: Installation block
      become: yes
      block:
      - name: Update the apt package index
        apt:
          update_cache: yes
  
      - name: Install prerequisites
        apt:
          name:
            - apt-transport-https
            - ca-certificates
            - curl
            - software-properties-common
          state: present

      # Region: Monitor settings
      # TODO: Move config somewhere else!
      - name: Set monitor settings
        shell: |
          xrandr --output eDP-1  --auto --output DP-1-3 --primary --right-of eDP-1
          xrandr --output eDP-1  --auto --output DP-1-2 --right-of DP-1-3
  
      # Region: Docker
      - name: Add Dockerâ€™s official GPG key
        apt_key:
          url: https://download.docker.com/linux/ubuntu/gpg
          state: present
  
      - name: Add Docker repository
        ansible.builtin.apt_repository:
          repo: >-
            deb [arch={{ arch_mapping[ansible_architecture] | default(ansible_architecture) }}] https://download.docker.com/linux/ubuntu {{ codename_mapping[ansible_lsb.codename] | default(ansible_lsb.codename) }} stable
          filename: docker
          state: present
  
      - name: Update the apt package index again
        apt:
          update_cache: yes
  
      - name: Install Docker Engine
        apt:
          name: docker-ce
          state: present
  
      - name: Ensure Docker service is running
        service:
          name: docker
          state: started
          enabled: yes
  
      - name: Add current user to the docker group
        user:
          name: "{{ local_user }}"
          groups: docker
          append: yes
  
      # Region: VS Code
      - name: Install VS Code
        flatpak:
          name: com.visualstudio.code

      - name: Set VS Code Alias
        become: no
        shell: |
          echo 'alias code="flatpak run com.visualstudio.code"' >> ~/.bashrc
  
      - name: Install VS Code extensions
        become: no
        shell: |
          #code --install-extension {{ item }}
          flatpak run com.visualstudio.code --install-extension {{ item }}
        with_items:
          - ms-vscode-remote.remote-containers
          - ms-vscode-remote.vscode-remote-extensionpack
      
      # Region: Flatpak Apps
      # Region: Creative Suite
      - name: Install Obsidian
        flatpak:
          name: md.obsidian.Obsidian
      - name: Install Godot
        flatpak:
          name: org.godotengine.Godot
      - name: Install Blender
        flatpak:
          name: org.blender.Blender
      - name: Install GIMP
        flatpak:
          name: org.gimp.GIMP
      - name: Install Krita
        flatpak:
          name: org.kde.krita
      - name: Install Audacity
        flatpak:
          name: org.audacityteam.Audacity
      - name: Install LMMS
        flatpak:
          name: io.lmms.LMMS
      # Region: Consumer
      - name: Install Steam
        flatpak:
          name: com.valvesoftware.Steam
      - name: Install Discord
        flatpak:
          name: com.discordapp.Discord
      - name: Install VLC
        flatpak:
          name: org.videolan.VLC
      - name: Install OBS
        flatpak:
          name:  com.obsproject.Studio
